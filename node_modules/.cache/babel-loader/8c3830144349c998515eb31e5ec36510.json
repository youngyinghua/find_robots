{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants\";\nconst initialStateSearch = {\n  searchfield: \"\"\n};\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state,\n        searchfield: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nconst initialStateRequest = {\n  robots: [],\n  pending: false,\n  error: \"\"\n};\nexport const requestRobots = (state = initialStateRequest, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state,\n        pending: true\n      };\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state,\n        pending: false,\n        robots: action.payload\n      };\n\n    case REQUEST_ROBOTS_FAILED:\n      return { ...state,\n        pending: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/wawa/Desktop/web/findrobots/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchfield","searchRobots","state","action","type","payload","initialStateRequest","robots","pending","error","requestRobots"],"mappings":"AAAA,SACEA,mBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKO,aALP;AAOA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,WAAW,EAAE;AADY,CAA3B;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,kBAAT,EAA6BI,MAAM,GAAG,EAAtC,KAA6C;AACvE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,mBAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAAhC,OAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPM;AASP,MAAMI,mBAAmB,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,OAAO,EAAE,KAFiB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAA5B;AAKA,OAAO,MAAMC,aAAa,GAAG,CAACR,KAAK,GAAGI,mBAAT,EAA8BH,MAAM,GAAG,EAAvC,KAA8C;AACzE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,sBAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYM,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKX,sBAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYM,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,MAAM,EAAEJ,MAAM,CAACE;AAA3C,OAAP;;AACF,SAAKP,qBAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYM,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAEN,MAAM,CAACE;AAA1C,OAAP;;AACF;AACE,aAAOH,KAAP;AARJ;AAUD,CAXM","sourcesContent":["import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchfield: \"\",\n};\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchfield: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialStateRequest = {\n  robots: [],\n  pending: false,\n  error: \"\",\n};\nexport const requestRobots = (state = initialStateRequest, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, pending: true };\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, pending: false, robots: action.payload };\n    case REQUEST_ROBOTS_FAILED:\n      return { ...state, pending: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}